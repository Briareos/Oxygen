<?php

/**
 * Implements hook_boot().
 */
function oxygen_boot()
{
    require_once dirname(__FILE__).'/autoload.php';

    $kernel   = new Oxygen_Kernel(oxygen_container());
    $request  = Oxygen_Http_Request::createFromGlobals();
    $response = $kernel->handle($request);

    if ($response === null) {
        return;
    }

    if ($response instanceof Oxygen_Http_Response) {
        $response->send();
        exit;
    }

    if ($response instanceof Oxygen_Util_HookedClosure) {
        $closure = new Oxygen_Util_Closure('oxygen_send_response', $response->getCallable());
        oxygen_queue_push($response->getHookName(), $closure->getCallable());
    }
}

/**
 * Implements hook_menu().
 */
function oxygen_menu()
{
    $items['admin/config/oxygen']            = array(
        'title'            => 'Oxygen',
        'description'      => 'Oxygen module for website management.',
        'position'         => 'right',
        'weight'           => -15,
        'page callback'    => 'system_admin_menu_block_page',
        'access arguments' => array('administer site configuration'),
        'file'             => 'system.admin.inc',
        'file path'        => drupal_get_path('module', 'system'),
    );
    $items['admin/config/oxygen/disconnect'] = array(
        'title'            => 'Disconnect the Oxygen module',
        'description'      => 'Disconnect the Oxygen module from all dashboards and disable remote management.',
        'page callback'    => 'drupal_get_form',
        'page arguments'   => array('oxygen_admin_disconnect',),
        'access arguments' => array('administer site configuration'),
        'type'             => MENU_NORMAL_ITEM,
        'file'             => 'oxygen.admin.inc',
    );

    return $items;
}

/**
 * @param callable $callback
 */
function oxygen_send_response($callback)
{
    /** @var Oxygen_Http_Response $response */
    $response = $callback();
    $response->send();
    exit;
}

function &oxygen_queue()
{
    static $queue;
    return $queue;
}

/**
 * @param string   $hook
 * @param callable $callback
 */
function oxygen_queue_push($hook, $callback)
{
    $queue = &oxygen_queue();

    $queue[$hook] = $callback;
}

/**
 * @param string $hook
 */
function oxygen_queue_run($hook)
{
    $queue = &oxygen_queue();

    if (!isset($queue[$hook])) {
        return;
    }

    $callable = $queue[$hook];

    unset($queue[$hook]);

    call_user_func($callable);
}

/**
 * Implements hook_init().
 */
function oxygen_init()
{
    oxygen_queue_run('init');
}

/**
 * Get the service container singleton.
 *
 * @return Oxygen_Container_Interface
 */
function oxygen_container()
{
    static $container;
    global $base_url;

    if ($container === null) {
        $container = new Oxygen_Container_Production(array(
            'module_version' => '1.0',
            'module_path'    => dirname(__FILE__),
            'base_url'       => $base_url,
        ));
    }

    return $container;
}
